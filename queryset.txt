from blog.models import*
Blog.objects.all()
<QuerySet [<Blog: Blog object (1)>, <Blog: Blog object (2)>, <Blog: Blog object (3)>]>
>>> Blog.objects.all()[:3]
<QuerySet [<Blog: Blog object (1)>, <Blog: Blog object (2)>, <Blog: Blog object (3)>]>
>>>Blog.objects.all().order_by('-created_at')
<QuerySet [<Blog: Blog object (3)>, <Blog: Blog object (2)>, <Blog: Blog object (1)>]>
>>> blog1.comments.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'QuerySet' object has no attribute 'comments'
blog1 = blog.objects.filter(id=1)
blog1
>>> blog1[0].comments.all()
<QuerySet [<Comment: Comment object (1)>, <Comment: Comment object (3)>]>
>>>
from product.models import*
 Product.objects.filter()
<QuerySet [<Product: Product object (1)>]>
>>> product1 = Product.objects.filter(id=1)
>>> product1
 product1[0].reviews.all()
<QuerySet [<Review: Review object (1)>]>
>>>
>>> from product.models import*
>>> from django.db.models import Count
>>> category_query = Category.objects.annotate(pro=Count('product_category'))
>>> list = []
>>> for cat in category_query:
...     if cat.pro >0:
...             list.append(cat)
...
>>> list
[<Category: category1>, <Category: category 2>]
>>> a = Product.objects.filter(category__title__icontains = "category1")
>>> a
<QuerySet [<Product: 1 >, <Product: product3 >]>